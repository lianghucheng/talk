version: '3'
services:
    node:
        build:
            .
        volumes:
            - "./:/usr/local/app"
        working_dir: "/usr/local/app"
        command: "npm run install_run"
        environment:
            LANG: "zh_CN.UTF-8"
            LC_ALL: "zh_CN.UTF-8"
        restart: always
        depends_on:
          - postgres
          - redis
          - rabbitmq

    nginx:
        build:
            ./etc/nginx
        volumes:
            - "./etc/nginx:/etc/nginx"
        ports:
            - "80:80"
            - "443:443"
        environment:
            LANG: "zh_CN.UTF-8"
            LC_ALL: "zh_CN.UTF-8"
        restart: always
        depends_on:
          - node

    postgres:
        build:
            ./etc/postgresql
        volumes:
            - "./etc/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf"
        ports:
            - "127.0.0.1:5432:5432"
        environment:
            POSTGRES_PASSWORD: "lzw981018"
            LANG: "zh_CN.UTF-8"
            LC_ALL: "zh_CN.UTF-8"
        command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
        restart: always

    redis:
        build:
          ./etc/redis
        volumes:
            - "./etc/redis:/etc/redis"
        ports:
            - "127.0.0.1:6379:6379"
        command: redis-server /etc/redis/redis.conf
        restart: always

    rabbitmq:
        image: "rabbitmq:3.8.3-management"
        hostname: "rabbitmq"
        ports:
            - "127.0.0.1:15672:15672"
        restart: always

    voip:
        image: "peerjs/peerjs-server:0.5.1"
        restart: always
        ports:
            - "9000:9000"
